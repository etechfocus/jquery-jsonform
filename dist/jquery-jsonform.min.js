/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/jquery-jsonform.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/classes/combo-field.js":
/*!************************************!*\
  !*** ./src/classes/combo-field.js ***!
  \************************************/
/*! exports provided: ComboFieldHandler, ComboField */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ComboFieldHandler\", function() { return ComboFieldHandler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ComboField\", function() { return ComboField; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * Combo form field handler. Create field instance.\n */\nvar ComboFieldHandler =\n/*#__PURE__*/\nfunction () {\n  function ComboFieldHandler() {\n    _classCallCheck(this, ComboFieldHandler);\n  }\n\n  _createClass(ComboFieldHandler, [{\n    key: \"appendField\",\n\n    /**\n     * Append field\n     *\n     * @param {object} boxBody - Form container\n     * @param {ModelInfo} modelInfo\n     * @param {AttrInfo} attrInfo\n     */\n    value: function appendField(boxBody, modelInfo, attrInfo) {\n      var field = new ComboField(boxBody, modelInfo, attrInfo);\n      field.appendField();\n    }\n    /**\n     * Validate field\n     *\n     * @param modelInfo\n     * @param attrInfo\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"validate\",\n    value: function validate(modelInfo, attrInfo) {\n      return true;\n    }\n  }]);\n\n  return ComboFieldHandler;\n}();\n/**\n * Combo form field with listeners, handlers and view layout.\n */\n\nvar ComboField =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {*} boxBody - Form container\n   * @param {ModelInfo} modelInfo\n   * @param {AttrInfo} attrInfo\n   */\n  function ComboField(boxBody, modelInfo, attrInfo) {\n    _classCallCheck(this, ComboField);\n\n    /**\n     * Form container\n     *\n     * @type {object|null}\n     */\n    this.boxBody = boxBody;\n    /**\n     * Model info\n     *\n     * @type {ModelInfo|null}\n     */\n\n    this.modelInfo = modelInfo;\n    /**\n     * Attribute info\n     *\n     * @type {AttrInfo|null}\n     */\n\n    this.attrInfo = attrInfo;\n    /**\n     * Meta info\n     *\n     * @type {ComboMeta|null}\n     */\n\n    this.meta = attrInfo.getMeta(ComboMeta);\n    /**\n     * `value` key in input data\n     *\n     * @type {string}\n     */\n\n    this.valueKey = 'value';\n    /**\n     * `name` key in input data\n     *\n     * @type {string}\n     */\n\n    this.nameKey = 'name';\n    /**\n     * Current data in select. If in `meta` set `typeaheadUrl` option will be saved last result.\n     *\n     * @type {object[]|null}\n     */\n\n    this.data = null;\n    /**\n     * Input search value in search field in dropdown list.\n     *\n     * @param {string|null}\n     */\n\n    this.inputSearchValue = null;\n    /**\n     * Field group/wrap where place field with field.\n     *\n     * @type {object|null}\n     */\n\n    this.eFieldGroup = null;\n    /**\n     * Current field.\n     *\n     * @type {object|null}\n     */\n\n    this.eField = null;\n    /**\n     * Current active dropdown list.\n     *\n     * @type {object|null}\n     */\n\n    this.eActiveDropdownList = null;\n    this.beforeInit();\n  }\n  /**\n   * Initialize necessary statements.\n   */\n\n\n  _createClass(ComboField, [{\n    key: \"beforeInit\",\n    value: function beforeInit() {\n      //\tCheck if set `typeaheadUrl` option\n      if (this.meta.getTypeaheadUrl()) {\n        this.data = [];\n        return;\n      } //\tIf use predefined values\n\n\n      if (!Array.isArray(this.meta.getData())) {\n        this.data = [];\n      }\n\n      this.data = this.meta.getData();\n    }\n    /**\n     * Return data.\n     *\n     * @returns {object[]}\n     */\n\n  }, {\n    key: \"getData\",\n    value: function getData() {\n      //\tEnsure that data is array\n      if (!Array.isArray(this.data)) {\n        return [];\n      } //\t@todo: Add data filter allow specific properties and throw excess\n\n\n      return this.data;\n    }\n    /**\n     * Return input search value\n     *\n     * @returns {*}\n     */\n\n  }, {\n    key: \"getInputSearchValue\",\n    value: function getInputSearchValue() {\n      if (typeof this.inputSearchValue === 'string') {\n        return this.inputSearchValue.trim();\n      }\n\n      return '';\n    }\n    /**\n     * Set input search value\n     *\n     * @param {string} inputSearchValue\n     */\n\n  }, {\n    key: \"setInputSearchValue\",\n    value: function setInputSearchValue(inputSearchValue) {\n      if (typeof inputSearchValue === 'string') {\n        this.inputSearchValue = inputSearchValue;\n        return;\n      }\n\n      this.inputSearchValue = '';\n    }\n    /**\n     * Append field\n     */\n\n  }, {\n    key: \"appendField\",\n    value: function appendField() {\n      var _this = this;\n\n      //  Set placeholder for default\n      var name = this.meta.getPlaceholder('-- Select value --'); //  Select options\n\n      var options = '';\n      this.getData().forEach(function (item) {\n        if (item.value.toString() === _this.attrInfo.getValue()) {\n          name = item.name;\n        }\n\n        options += '\\\n\t\t\t\t<option\\\n\t\t\t\t\tvalue=\"' + item.value + '\"\\\n\t\t\t\t>\\\n\t\t\t\t\t' + item.name + '\\\n\t\t\t\t</option>';\n      });\n      this.eField = $('\\\n\t\t\t<div \\\n\t\t\t\tclass=\"form-control form-control-combo\" \\\n\t\t\t\tid=\"' + this.attrInfo.getId() + '\"\\\n\t\t\t>\\\n\t\t\t\t<select\\\n\t\t\t\t\tid=\"' + this.attrInfo.getId() + '\"\\\n\t\t\t\t\tstyle=\"display: none;\"\\\n\t\t\t\t>\\\n\t\t\t\t\t' + options + '\\\n\t\t\t\t</select>\\\n\t\t\t\t<div class=\"name\">\\\n\t\t\t\t\t<span>\\\n\t\t\t\t\t\t' + name + '\\\n\t\t\t\t\t</span>\\\n\t\t\t\t</div>\\\n\t\t\t</div>\\\n      \t'); //\tPut field in wrap\n\n      this.eFieldGroup = $('<div class=\"form-group\"></div>');\n      var fieldLabel = $('<label for=\"' + this.attrInfo.getId() + '\">' + this.attrInfo.getName() + '</label>');\n      this.eFieldGroup.append(fieldLabel);\n      this.eFieldGroup.append(this.eField);\n      this.boxBody.append(this.eFieldGroup); //\tAdd actions to the field\n\n      this.addActions();\n    }\n    /**\n     * Add actions for the field\n     */\n\n  }, {\n    key: \"addActions\",\n    value: function addActions() {\n      var _this2 = this;\n\n      var eBody = $('body');\n      var fieldInFocus = false;\n      this.eField.on('click', function () {\n        fieldInFocus = !fieldInFocus;\n\n        if (fieldInFocus) {\n          _this2.eActiveDropdownList = _this2.addDropdownList(_this2.eField, _this2.getData());\n\n          _this2.toPosition();\n\n          _this2.toSize(_this2.eField, _this2.eActiveDropdownList); //\tFilter dropdown list\n\n\n          _this2.filterDropdownList(_this2.getInputSearchValue());\n        } else {\n          _this2.removeDropdownList(_this2.eActiveDropdownList);\n        }\n      }); //\tHide dropdown list if click outside of the field or dropdown list\n\n      $(document).on('click', function (e) {\n        if (fieldInFocus === null || !_this2.eActiveDropdownList) {\n          return;\n        }\n\n        var eTarget = $(e.target); //\tSkip if click on field or dropdown list\n\n        if ( //\tForm field match\n        _this2.eField.is(eTarget) || _this2.eField.has(eTarget).length !== 0 || //\tDropdown list\n        _this2.eActiveDropdownList.is(eTarget) || _this2.eActiveDropdownList.has(eTarget).length !== 0) {\n          return;\n        } //\tRemove dropdown list if click outside of field of dropdown list\n\n\n        _this2.removeDropdownList();\n\n        fieldInFocus = false;\n      }); //\tHide dropdown list select item\n\n      eBody.on('click', '.combobox-item', function (e) {\n        var eTarget = $(e.target).closest('.combobox-item');\n        var value = eTarget.attr('data-value').toString();\n        var name = ''; //\tFind name for option\n\n        _this2.getData().forEach(function (item) {\n          if (item.value.toString() === value) {\n            name = item.name;\n          }\n        });\n\n        _this2.removeDropdownList(_this2.eActiveDropdownList);\n\n        fieldInFocus = false; //\tUpdate form field value\n\n        _this2.eField.find('select').val(value);\n\n        _this2.eField.find('.name span').text(name);\n      }); //\tReposition list\n\n      $(window).on('resize', function () {\n        //\tPosition only dropdown list that lead to this field\n        if (!fieldInFocus) {\n          return;\n        }\n\n        _this2.toPosition(_this2.eActiveDropdownList);\n\n        _this2.toSize(_this2.eActiveDropdownList);\n      }); //\tDropdown search\n\n      eBody.on('keyup', '.combobox-search', function (e) {\n        //\tSearch by typehead URL\n        if (_this2.meta.getTypeaheadUrl()) {\n          $.ajax({\n            type: 'POST',\n            url: _this2.meta.getTypeaheadUrl(),\n            data: {\n              inputSearchValue: _this2.getInputSearchValue()\n            },\n            success: function success(response) {//\t@todo: Filter data from server and update dropdown list\n            }\n          });\n        } //\tSearch by static data\n        else {\n            _this2.filterDropdownList(e.target.value);\n          }\n      });\n    }\n    /**\n     * Add dropdown list to DOM and return link to it node.\n     */\n\n  }, {\n    key: \"addDropdownList\",\n    value: function addDropdownList() {\n      var tpl = $('\\\n\t\t\t<div class=\"combobox\">\\\n\t\t\t\t<div class=\"combobox-content-wrap\">\\\n\t\t\t\t\t<div class=\"combobox-search\">\\\n\t\t\t\t\t\t<input \\\n\t\t\t\t\t\t\ttype=\"text\" \\\n\t\t\t\t\t\t\tclass=\"form-control\"\\\n\t\t\t\t\t\t\tvalue=\"' + this.getInputSearchValue() + '\"\\\n\t\t\t\t\t\t\t>\\\n\t\t\t\t\t</div>\\\n\t\t\t\t\t<div class=\"combobox-content\"></div>\\\n\t\t\t\t</div>\\\n\t\t\t</div>\\\n\t\t\t');\n      this.getData().forEach(function (item) {\n        //\tValue\n        if (item.value === undefined) {\n          return;\n        }\n\n        var value = item.value; //\tName\n\n        var name = item.name;\n\n        if (name === undefined) {\n          name = '';\n        }\n\n        tpl.find('.combobox-content').append($('\\\n\t\t\t\t<div class=\"combobox-item\" data-value=\"' + value + '\">\\\n\t\t\t\t\t<span class=\"name\">\\\n\t\t\t\t\t\t' + name + '\\\n\t\t\t\t\t</span>\\\n\t\t\t\t</div>\\\n\t\t\t\t'));\n      });\n      $('body').append(tpl);\n      var eSearchInput = tpl.find('.combobox-search input');\n      eSearchInput.focus();\n      eSearchInput.get(0).selectionStart = eSearchInput.val().length;\n      return tpl;\n    }\n    /**\n     * Filter dropdown list with input search value.\n     *\n     * @param {string} input - Input search value.\n     */\n\n  }, {\n    key: \"filterDropdownList\",\n    value: function filterDropdownList(input) {\n      var _this3 = this;\n\n      //\tSkip if not active\n      if (!this.eActiveDropdownList) {\n        return;\n      }\n\n      this.setInputSearchValue(input);\n      var items = '';\n      this.getData().forEach(function (item) {\n        //\tFind matches\n        if (_this3.getInputSearchValue().length > 0 && item.name.toLowerCase().indexOf(_this3.inputSearchValue.toLowerCase()) === -1) {\n          return;\n        }\n\n        items += '\\\n\t\t\t\t<div class=\"combobox-item\" data-value=\"' + item.value + '\">\\\n\t\t\t\t\t<span class=\"name\">\\\n\t\t\t\t\t\t' + item.name + '\\\n\t\t\t\t\t</span>\\\n\t\t\t\t</div>\\\n\t\t\t\t';\n      });\n      this.eActiveDropdownList.find('.combobox-content').empty().html(items);\n      this.toPosition();\n    }\n    /**\n     * Remove active combobox\n     */\n\n  }, {\n    key: \"removeDropdownList\",\n    value: function removeDropdownList() {\n      $(this.eActiveDropdownList).remove();\n    }\n    /**\n     * Move dropdown list to right position near the active field\n     */\n\n  }, {\n    key: \"toPosition\",\n    value: function toPosition() {\n      var eSearch = this.eActiveDropdownList.find('.combobox-search');\n      var searchHeight = parseFloat(eSearch.outerHeight());\n      var eContent = this.eActiveDropdownList.find('.combobox-content');\n      var dropdownListHeight = parseFloat(this.eActiveDropdownList.outerHeight());\n      var scrollTop = parseFloat($(window).scrollTop());\n      var borderWidth = parseFloat(this.eActiveDropdownList.find('.combobox-content-wrap').css('borderWidth'));\n      var top = this.eField.offset().top + this.eField.outerHeight() - borderWidth;\n      var atBottom = true; //\tCheck that dropdown list not out of document height\n\n      if (top + dropdownListHeight > scrollTop + $(window).height()) {\n        //\tMove dropdown list top of the field\n        top = this.eField.offset().top - dropdownListHeight + borderWidth;\n        atBottom = false;\n      }\n\n      this.eActiveDropdownList.css({\n        left: this.eField.offset().left + 'px',\n        top: top + 'px'\n      }); //\tAlign search field\n      //\tAlign search at bottom\n\n      if (atBottom) {\n        eSearch.css({\n          top: 0,\n          bottom: ''\n        });\n        eContent.css({\n          marginTop: eSearch.outerHeight() + 'px',\n          marginBottom: 0\n        });\n      } //\tAlign search field at top\n      else {\n          eSearch.css({\n            top: '',\n            bottom: 0\n          });\n          eContent.css({\n            marginTop: 0,\n            marginBottom: eSearch.outerHeight() + 'px'\n          });\n        }\n    }\n    /**\n     * Resize dropdown list fit to field\n     */\n\n  }, {\n    key: \"toSize\",\n    value: function toSize() {\n      //\tSkip if dropdown list now not open\n      if (!this.eActiveDropdownList) {\n        return;\n      }\n\n      this.eActiveDropdownList.width(this.eField.outerWidth() + 'px');\n    }\n  }]);\n\n  return ComboField;\n}();\n\n//# sourceURL=webpack:///./src/classes/combo-field.js?");

/***/ }),

/***/ "./src/classes/currency-field.js":
/*!***************************************!*\
  !*** ./src/classes/currency-field.js ***!
  \***************************************/
/*! exports provided: CurrencyField */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CurrencyField\", function() { return CurrencyField; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar CurrencyField =\n/*#__PURE__*/\nfunction () {\n  function CurrencyField() {\n    _classCallCheck(this, CurrencyField);\n  }\n\n  _createClass(CurrencyField, [{\n    key: \"appendField\",\n    value: function appendField(boxBody, modelInfo, attrInfo) {\n      var fieldGroup = $('<div class=\"form-group\"></div>');\n      var fieldLabel = $('<label for=\"' + attrInfo.getId() + '\">' + attrInfo.getName() + '</label>');\n      fieldGroup.append(fieldLabel);\n      var fieldInputGroup = $('<div class=\"input-group\"></div>');\n      var fieldIcon = $('<div class=\"input-group-addon\"><i class=\"fa fa-dollar\"></i></div>');\n      fieldInputGroup.append(fieldIcon);\n      var fieldInput = $('<input type=\"text\" class=\"form-control\" name=\"' + attrInfo.getId() + '\" id=\"' + attrInfo.getId() + '\" value=\"' + attrInfo.getValue() + '\" placeholder=\"\">');\n      fieldInputGroup.append(fieldInput);\n      fieldGroup.append(fieldInputGroup);\n      boxBody.append(fieldGroup);\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(modelInfo, attrInfo) {\n      // TODO - do validation on min, max ...etc\n      return true;\n    }\n  }]);\n\n  return CurrencyField;\n}();\n\n//# sourceURL=webpack:///./src/classes/currency-field.js?");

/***/ }),

/***/ "./src/classes/hidden-field-handler.js":
/*!*********************************************!*\
  !*** ./src/classes/hidden-field-handler.js ***!
  \*********************************************/
/*! exports provided: HiddenFieldHandler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HiddenFieldHandler\", function() { return HiddenFieldHandler; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar HiddenFieldHandler =\n/*#__PURE__*/\nfunction () {\n  function HiddenFieldHandler() {\n    _classCallCheck(this, HiddenFieldHandler);\n  }\n\n  _createClass(HiddenFieldHandler, [{\n    key: \"appendField\",\n    value: function appendField(boxBody, modelInfo, attrInfo) {\n      var fieldInput = $('<input type=\"hidden\" class=\"form-control\" name=\"' + attrInfo.getId() + '\" id=\"' + attrInfo.getId() + '\" value=\"' + attrInfo.getValue() + '\" placeholder=\"\">');\n      boxBody.append(fieldInput);\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(modelInfo, attrInfo) {\n      return true;\n    }\n  }]);\n\n  return HiddenFieldHandler;\n}();\n\n//# sourceURL=webpack:///./src/classes/hidden-field-handler.js?");

/***/ }),

/***/ "./src/classes/password-field.js":
/*!***************************************!*\
  !*** ./src/classes/password-field.js ***!
  \***************************************/
/*! exports provided: PasswordField */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PasswordField\", function() { return PasswordField; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar PasswordField =\n/*#__PURE__*/\nfunction () {\n  function PasswordField() {\n    _classCallCheck(this, PasswordField);\n  }\n\n  _createClass(PasswordField, [{\n    key: \"appendField\",\n    value: function appendField(boxBody, modelInfo, attrInfo) {\n      var fieldGroup = $('<div class=\"form-group\"></div>');\n      var fieldLabel = $('<label for=\"' + attrInfo.getId() + '\">' + attrInfo.getName() + '</label>');\n      fieldGroup.append(fieldLabel);\n      var fieldInput = $('<input type=\"password\" class=\"form-control\" name=\"' + attrInfo.getId() + '\" id=\"' + attrInfo.getId() + '\" placeholder=\"\">');\n      fieldGroup.append(fieldInput);\n      boxBody.append(fieldGroup);\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(modelInfo, attrInfo) {\n      // TODO - do validation on min, max ...etc\n      return true;\n    }\n  }]);\n\n  return PasswordField;\n}();\n\n//# sourceURL=webpack:///./src/classes/password-field.js?");

/***/ }),

/***/ "./src/classes/string-field.js":
/*!*************************************!*\
  !*** ./src/classes/string-field.js ***!
  \*************************************/
/*! exports provided: StringField */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"StringField\", function() { return StringField; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar StringField =\n/*#__PURE__*/\nfunction () {\n  function StringField() {\n    _classCallCheck(this, StringField);\n  }\n\n  _createClass(StringField, [{\n    key: \"appendField\",\n    value: function appendField(boxBody, modelInfo, attrInfo) {\n      var fieldGroup = $('<div class=\"form-group\"></div>');\n      var fieldLabel = $('<label for=\"' + attrInfo.getId() + '\">' + attrInfo.getName() + '</label>');\n      fieldGroup.append(fieldLabel);\n      var fieldInput = $('<input type=\"text\" class=\"form-control\" name=\"' + attrInfo.getId() + '\" id=\"' + attrInfo.getId() + '\" value=\"' + attrInfo.getValue() + '\" placeholder=\"\">');\n      fieldGroup.append(fieldInput);\n      boxBody.append(fieldGroup);\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(modelInfo, attrInfo) {\n      // TODO - do validation on min, max ...etc\n      return true;\n    }\n  }]);\n\n  return StringField;\n}();\n\n//# sourceURL=webpack:///./src/classes/string-field.js?");

/***/ }),

/***/ "./src/classes/text-field.js":
/*!***********************************!*\
  !*** ./src/classes/text-field.js ***!
  \***********************************/
/*! exports provided: TextField */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TextField\", function() { return TextField; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar TextField =\n/*#__PURE__*/\nfunction () {\n  function TextField() {\n    _classCallCheck(this, TextField);\n  }\n\n  _createClass(TextField, [{\n    key: \"appendField\",\n    value: function appendField(boxBody, modelInfo, attrInfo) {\n      var fieldGroup = $('<div class=\"form-group\"></div>');\n      var fieldLabel = $('<label for=\"' + attrInfo.getId() + '\">' + attrInfo.getName() + '</label>');\n      fieldGroup.append(fieldLabel);\n      var fieldInput = $('<textarea class=\"form-control\" rows=\"3\" name=\"' + attrInfo.getId() + '\" id=\"' + attrInfo.getId() + '\" value=\"' + attrInfo.getValue() + '\" placeholder=\"\"></textarea>');\n      fieldGroup.append(fieldInput);\n      boxBody.append(fieldGroup);\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(modelInfo, attrInfo) {\n      // TODO - do validation on min, max ...etc\n      return true;\n    }\n  }]);\n\n  return TextField;\n}();\n\n//# sourceURL=webpack:///./src/classes/text-field.js?");

/***/ }),

/***/ "./src/jquery-jsonform.js":
/*!********************************!*\
  !*** ./src/jquery-jsonform.js ***!
  \********************************/
/*! exports provided: FormBuilder */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FormBuilder\", function() { return FormBuilder; });\n/* harmony import */ var _classes_hidden_field_handler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./classes/hidden-field-handler */ \"./src/classes/hidden-field-handler.js\");\n/* harmony import */ var _classes_string_field__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./classes/string-field */ \"./src/classes/string-field.js\");\n/* harmony import */ var _classes_password_field__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./classes/password-field */ \"./src/classes/password-field.js\");\n/* harmony import */ var _classes_text_field__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./classes/text-field */ \"./src/classes/text-field.js\");\n/* harmony import */ var _classes_currency_field__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./classes/currency-field */ \"./src/classes/currency-field.js\");\n/* harmony import */ var _classes_combo_field__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./classes/combo-field */ \"./src/classes/combo-field.js\");\n/* harmony import */ var _scss_jquery_jsonform_scss__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./scss/jquery-jsonform.scss */ \"./src/scss/jquery-jsonform.scss\");\n/* harmony import */ var _scss_jquery_jsonform_scss__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_scss_jquery_jsonform_scss__WEBPACK_IMPORTED_MODULE_6__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * FormBuilder main class.\n */\n\n\n\n\n\n\n\nvar FormBuilder =\n/*#__PURE__*/\nfunction () {\n  function FormBuilder(options) {\n    _classCallCheck(this, FormBuilder);\n\n    var defaultOptions = {\n      method: 'post',\n      action: '#',\n      buttonLabel: 'Submit'\n    };\n    options = options || {};\n\n    for (var opt in defaultOptions) {\n      if (defaultOptions.hasOwnProperty(opt) && !options.hasOwnProperty(opt)) {\n        options[opt] = default_options[opt];\n      }\n    }\n\n    this.options = options; // register handles\n\n    this.registerHandler(FormBuilder.TYPE_HIDDEN, new _classes_hidden_field_handler__WEBPACK_IMPORTED_MODULE_0__[\"HiddenFieldHandler\"]());\n    this.registerHandler(FormBuilder.TYPE_STRING, new _classes_string_field__WEBPACK_IMPORTED_MODULE_1__[\"StringField\"]());\n    this.registerHandler(FormBuilder.TYPE_PASSWORD, new _classes_password_field__WEBPACK_IMPORTED_MODULE_2__[\"PasswordField\"]());\n    this.registerHandler(FormBuilder.TYPE_EMAIL, new _classes_string_field__WEBPACK_IMPORTED_MODULE_1__[\"StringField\"]());\n    this.registerHandler(FormBuilder.TYPE_TEXT, new _classes_text_field__WEBPACK_IMPORTED_MODULE_3__[\"TextField\"]());\n    this.registerHandler(FormBuilder.TYPE_CURRENCY, new _classes_currency_field__WEBPACK_IMPORTED_MODULE_4__[\"CurrencyField\"]());\n    this.registerHandler(FormBuilder.TYPE_DATETIME, new _classes_string_field__WEBPACK_IMPORTED_MODULE_1__[\"StringField\"]());\n    this.registerHandler(FormBuilder.TYPE_COMBO, new _classes_combo_field__WEBPACK_IMPORTED_MODULE_5__[\"ComboFieldHandler\"]());\n  }\n\n  _createClass(FormBuilder, [{\n    key: \"registerHandler\",\n    value: function registerHandler(type, handler) {\n      FormBuilder.handlers[type] = handler;\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(event) {\n      /*\n      \tfor (var i in FormBuilder.sections) {\n      \t  var section = FormBuilder.sections[i];\n      \t  var modelInfo = section['modelInfo'];\n      \t  var attrInfoList = section['modelInfo'].getAttrInfoList();\n      \t  for (var i in attrInfoList) {\n      \t\tvar attrInfo = attrInfoList[i];\n      \t\tvar type = attrInfo.getType();\n      \t\tif (type in event.data.getHandlers()) {\n      \t\t  var handler = event.data.getHandler(type);\n      \t\t  var isValid = handler.validate(modelInfo, attrInfo);\n      \t\t  if (!isValid) {\n      \t\t\t// TODO - display error\n      \t\t\treturn false;\n      \t\t  }\n      \t\t}\n      \t  }\n      \t}\n      */\n      // everything is good, let's submit\n      return true;\n    }\n  }, {\n    key: \"openForm\",\n    value: function openForm(formHeaderId) {\n      this._formHeader = $('<form role=\"form\" method=\"' + this.options.method + '\" action=\"' + this.options.action + '\"></form>');\n      $(formHeaderId).wrap(this._formHeader);\n      $(document).on('submit', this._formHeader, this.onSubmit);\n    }\n  }, {\n    key: \"getHandlers\",\n    value: function getHandlers() {\n      return FormBuilder.handlers;\n    }\n  }, {\n    key: \"getHandler\",\n    value: function getHandler(type) {\n      return FormBuilder.handlers[type];\n    }\n  }, {\n    key: \"createSection\",\n    value: function createSection(sectionId, modelInfoJson) {\n      var modelInfo = new ModelInfo(modelInfoJson);\n      var box = $('<div class=\"box\"></div>'); // boxHeader\n\n      var boxHeader = $('<div class=\"box-header\"></div>');\n      var title = $('<div>' + modelInfo.getName() + '</div>');\n      boxHeader.append(title); // boxBody\n\n      var boxBody = $('<div class=\"box-body\"></div>');\n      var attrInfoList = modelInfo.getAttrInfoList();\n\n      for (var i in attrInfoList) {\n        var attrInfo = attrInfoList[i];\n        var type = attrInfo.getType();\n\n        if (type in FormBuilder.handlers) {\n          var handler = FormBuilder.handlers[type];\n          handler.appendField(boxBody, modelInfo, attrInfo);\n        }\n      } // boxFooter\n\n\n      var boxFooter = $('<div class=\"box-footer\"></div>');\n      box.append(boxHeader);\n      box.append(boxBody);\n      box.append(boxFooter);\n      $(sectionId).replaceWith(box);\n      FormBuilder.sections.push({\n        'modelInfo': modelInfo,\n        'box': box\n      });\n    }\n  }, {\n    key: \"closeForm\",\n    value: function closeForm(formFooterId) {\n      this._formFooter = $('<input type=\"submit\" class=\"btn btn-primary\" value=\"' + this.options.buttonLabel + '\">');\n      $(formFooterId).replaceWith(this._formFooter);\n    }\n  }]);\n\n  return FormBuilder;\n}();\nFormBuilder.TYPE_HIDDEN = \"hidden\";\nFormBuilder.TYPE_STRING = \"string\";\nFormBuilder.TYPE_PASSWORD = \"password\";\nFormBuilder.TYPE_EMAIL = \"email\";\nFormBuilder.TYPE_TEXT = \"text\";\nFormBuilder.TYPE_CURRENCY = \"currency\";\nFormBuilder.TYPE_DATETIME = \"datetime\";\nFormBuilder.TYPE_COMBO = \"combo\";\nFormBuilder.handlers = [];\nFormBuilder.sections = [];\n\n//# sourceURL=webpack:///./src/jquery-jsonform.js?");

/***/ }),

/***/ "./src/scss/jquery-jsonform.scss":
/*!***************************************!*\
  !*** ./src/scss/jquery-jsonform.scss ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/scss/jquery-jsonform.scss?");

/***/ })

/******/ });